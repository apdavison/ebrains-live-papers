{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shailesh/Work/LivePaper/live-paper-builder/src/SingleSelect.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 700,\n    maxWidth: 900\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function SingleSelect(props) {\n  _s();\n\n  const classes = useStyles();\n  const fieldId = \"select-\" + props.label.replace(\" \", \"-\");\n  const fieldLabelId = fieldId + \"-label\";\n  const fieldName = props.label.replace(\" \", \"_\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: fieldLabelId,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: fieldLabelId,\n        id: fieldId,\n        value: props.value ? props.value : \"\",\n        name: fieldName,\n        onChange: props.handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }, this),\n        MenuProps: MenuProps,\n        children: [// conditional rendering syntax\n        props.label !== \"implementation_status\" && /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, \"None\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), props.itemNames.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: props.helperText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this) // Alternative (styling pending)\n  // <div>\n  //   <TextField\n  //     id={fieldId}\n  //     select\n  //     label={capitalize(props.label)}\n  //     value={props.value}\n  //     onChange={props.handleChange}\n  //     helperText={props.helperText}\n  //     variant=\"outlined\"\n  //   >\n  //     {props.itemNames.map((name) => (\n  //       <MenuItem key={name} value={name} MenuProps={MenuProps}>\n  //         {name}\n  //       </MenuItem>\n  //     ))}\n  //   </TextField>\n  // </div>\n  ;\n}\n\n_s(SingleSelect, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SingleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleSelect\");","map":{"version":3,"sources":["/home/shailesh/Work/LivePaper/live-paper-builder/src/SingleSelect.js"],"names":["React","makeStyles","Input","InputLabel","MenuItem","FormHelperText","FormControl","ListItemText","Select","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SingleSelect","props","classes","fieldId","label","replace","fieldLabelId","fieldName","value","handleChange","itemNames","map","name","helperText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 700,\n        maxWidth: 900,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nexport default function SingleSelect(props) {\n    const classes = useStyles();\n    const fieldId = \"select-\" + props.label.replace(\" \", \"-\");\n    const fieldLabelId = fieldId + \"-label\";\n    const fieldName = props.label.replace(\" \", \"_\")\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id={fieldLabelId}>{props.label}</InputLabel>\n                <Select\n                    labelId={fieldLabelId}\n                    id={fieldId}\n                    value={props.value ? props.value : \"\"}\n                    name={fieldName}\n                    onChange={props.handleChange}\n                    input={<Input />}\n                    MenuProps={MenuProps}\n                >\n                    {\n                        // conditional rendering syntax\n                        (props.label !== \"implementation_status\") &&\n                        <MenuItem key=\"None\" value=\"\">\n                            <ListItemText primary=\"None\" />\n                        </MenuItem>\n                    }\n                    {props.itemNames.map(name => (\n                        <MenuItem key={name} value={name}>\n                            <ListItemText primary={name} />\n                        </MenuItem>\n                    ))}\n                </Select>\n                <FormHelperText>{props.helperText}</FormHelperText>\n            </FormControl>\n        </div>\n\n        // Alternative (styling pending)\n        // <div>\n        //   <TextField\n        //     id={fieldId}\n        //     select\n        //     label={capitalize(props.label)}\n        //     value={props.value}\n        //     onChange={props.handleChange}\n        //     helperText={props.helperText}\n        //     variant=\"outlined\"\n        //   >\n        //     {props.itemNames.map((name) => (\n        //       <MenuItem key={name} value={name} MenuProps={MenuProps}>\n        //         {name}\n        //       </MenuItem>\n        //     ))}\n        //   </TextField>\n        // </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}