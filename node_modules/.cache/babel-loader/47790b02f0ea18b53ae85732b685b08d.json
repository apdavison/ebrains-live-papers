{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shailesh/Work/LivePaper/live-paper-builder/src/posts.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { List, Datagrid, TextField } from 'react-admin';\nimport { cloneElement, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useListContext, TopToolbar, CreateButton, ExportButton, Button, sanitizeListRestProps } from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\n\nconst ListActions = props => {\n  _s();\n\n  const {\n    className,\n    exporter,\n    filters,\n    maxResults,\n    ...rest\n  } = props;\n  const {\n    currentSort,\n    resource,\n    displayedFilters,\n    filterValues,\n    hasCreate,\n    basePath,\n    selectedIds,\n    showFilter,\n    total\n  } = useListContext();\n  return /*#__PURE__*/_jsxDEV(TopToolbar, {\n    className: className,\n    ...sanitizeListRestProps(rest),\n    children: [filters && /*#__PURE__*/cloneElement(filters, {\n      resource,\n      showFilter,\n      displayedFilters,\n      filterValues,\n      context: 'button'\n    }), /*#__PURE__*/_jsxDEV(CreateButton, {\n      basePath: basePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExportButton, {\n      disabled: total === 0,\n      resource: resource,\n      sort: currentSort,\n      filterValues: filterValues,\n      maxResults: maxResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        alert('Your custom action');\n      },\n      label: \"Show calendar\",\n      children: /*#__PURE__*/_jsxDEV(IconEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListActions, \"AF0+cSOvt5JHKAKOUwCCOoRVhww=\", false, function () {\n  return [useListContext];\n});\n\n_c = ListActions;\nexport const PostList = props => /*#__PURE__*/_jsxDEV(List, { ...props,\n  actions: /*#__PURE__*/_jsxDEV(ListActions, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 31\n  }, this),\n  children: /*#__PURE__*/_jsxDEV(Datagrid, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      source: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      source: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      source: \"body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 5\n}, this);\n_c2 = PostList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListActions\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"sources":["/home/shailesh/Work/LivePaper/live-paper-builder/src/posts.js"],"names":["React","List","Datagrid","TextField","cloneElement","useMemo","PropTypes","useListContext","TopToolbar","CreateButton","ExportButton","Button","sanitizeListRestProps","IconEvent","ListActions","props","className","exporter","filters","maxResults","rest","currentSort","resource","displayedFilters","filterValues","hasCreate","basePath","selectedIds","showFilter","total","context","alert","PostList"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,aAA1C;AAEA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,cADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,YAJJ,EAKIC,MALJ,EAMIC,qBANJ,QAOO,aAPP;AAQA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACFC,IAAAA,SADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,OAHE;AAIFC,IAAAA,UAJE;AAKF,OAAGC;AALD,MAMFL,KANJ;AAOA,QAAM;AACFM,IAAAA,WADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,gBAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA,SALE;AAMFC,IAAAA,QANE;AAOFC,IAAAA,WAPE;AAQFC,IAAAA,UARE;AASFC,IAAAA;AATE,MAUFtB,cAAc,EAVlB;AAWA,sBACI,QAAC,UAAD;AAAY,IAAA,SAAS,EAAES,SAAvB;AAAA,OAAsCJ,qBAAqB,CAACQ,IAAD,CAA3D;AAAA,eACKF,OAAO,iBAAId,YAAY,CAACc,OAAD,EAAU;AAC9BI,MAAAA,QAD8B;AAE9BM,MAAAA,UAF8B;AAG9BL,MAAAA,gBAH8B;AAI9BC,MAAAA,YAJ8B;AAK9BM,MAAAA,OAAO,EAAE;AALqB,KAAV,CAD5B,eAQI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEJ;AAAxB;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,YAAD;AACI,MAAA,QAAQ,EAAEG,KAAK,KAAK,CADxB;AAEI,MAAA,QAAQ,EAAEP,QAFd;AAGI,MAAA,IAAI,EAAED,WAHV;AAII,MAAA,YAAY,EAAEG,YAJlB;AAKI,MAAA,UAAU,EAAEL;AALhB;AAAA;AAAA;AAAA;AAAA,YATJ,eAiBI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAM;AAAEY,QAAAA,KAAK,CAAC,oBAAD,CAAL;AAA8B,OADnD;AAEI,MAAA,KAAK,EAAC,eAFV;AAAA,6BAII,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA7CD;;GAAMjB,W;UAkBEP,c;;;KAlBFO,W;AA+CN,OAAO,MAAMkB,QAAQ,GAAIjB,KAAD,iBACpB,QAAC,IAAD,OAAUA,KAAV;AAAiB,EAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAA1B;AAAA,yBACI,QAAC,QAAD;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADG;MAAMiB,Q","sourcesContent":["import * as React from \"react\";\nimport { List, Datagrid, TextField } from 'react-admin';\n\nimport { cloneElement, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\n\nconst ListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n            <Button\n                onClick={() => { alert('Your custom action'); }}\n                label=\"Show calendar\"\n            >\n                <IconEvent />\n            </Button>\n        </TopToolbar>\n    );\n};\n\nexport const PostList = (props) => (\n    <List {...props} actions={<ListActions />}>\n        <Datagrid>\n            <TextField source=\"id\" />\n            <TextField source=\"title\" />\n            <TextField source=\"body\" />\n        </Datagrid>\n    </List>\n);\n"]},"metadata":{},"sourceType":"module"}