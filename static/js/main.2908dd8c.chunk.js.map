{"version":3,"sources":["DynamicTable.js","SingleSelect.js","LivePaper.template","CreateLivePaper.js","App.js","reportWebVitals.js","index.js"],"names":["DynamicTable","props","state","items","value","this","push","firstname","lastname","affiliation","setState","onChangeValue","i","event","target","name","splice","context","map","item","ind","style","width","padding","type","onChange","handleItemChanged","bind","Button","variant","color","onClick","handleItemDeleted","renderRows","handleAdd","React","Component","useStyles","makeStyles","theme","formControl","minWidth","maxWidth","noLabel","marginTop","spacing","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","SingleSelect","classes","fieldId","label","replace","fieldLabelId","fieldName","FormControl","className","InputLabel","id","Select","labelId","handleChange","input","Input","itemNames","MenuItem","ListItemText","primary","FormHelperText","helperText","footerStyle","backgroundColor","fontSize","borderTop","textAlign","position","left","transform","bottom","height","zIndex","phantomStyle","display","Footer","children","showNotification","enqueueSnackbar","message","anchorOrigin","vertical","horizontal","getFormattedTime","today","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","mi","getMinutes","s","getSeconds","toString","MyDialogTitle","withStyles","root","margin","closeButton","right","top","palette","grey","onClose","other","disableTypography","Typography","IconButton","aria-label","popular_licenses","CreateLivePaper","data","page_title","authors_string","affiliations_string","authors","corresponding_author","email","year","paper_title","journal","url","citation","doi","license","abstract","handleClose","handleDownloadLivePaper","handlePreviewLivePaper","handleSaveProject","handleFieldChange","handleYearChange","handleAuthorsChange","makePageTitleString","makeAuthorsString","makeAffiliationsString","fetch","LivePaper","then","r","text","source","output","nunjucks","renderString","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","render","w","window","open","write","close","first","Promise","resolve","reject","second","third","all","lp_data","JSON","stringify","blob","link","console","log","_d","author_data","filter","trim","length","data_string","forEach","author","index","sup","unique_affs","split","x","aff","includes","join","Dialog","fullScreen","aria-labelledby","DialogContent","src","alt","paddingLeft","paddingRight","TextField","fullWidth","InputProps","utils","MomentUtils","DatePicker","inputVariant","views","minDate","maxDate","animateYearScrolling","borderBottom","multiline","rows","Grid","xs","data-collapsible","justifyContent","alignItems","fontWeight","withSnackbar","App","createLivePaperOpen","projectData","inputFileRef","createRef","handleCreateLivePaperOpen","handleCreateLivePaperClose","handleLoadProject","onFileSelect","current","files","scope","reader","FileReader","onload","that","parse","result","readAsText","createLivePaperContent","ref","accept","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.2908dd8c.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default class DynamicTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: this.props.value,\n    };\n  }\n\n  handleAdd() {\n    var items = this.state.items;\n    items.push({ firstname: \"\", lastname: \"\", affiliation: \"\" });\n\n    this.setState({\n      items: items,\n    });\n    this.props.onChangeValue(items);\n  }\n\n  handleItemChanged(i, event) {\n    var items = this.state.items;\n    items[i][event.target.name] = event.target.value;\n\n    this.setState({\n      items: items,\n    });\n    this.props.onChangeValue(items);\n  }\n\n  handleItemDeleted(i) {\n    var items = this.state.items;\n\n    items.splice(i, 1);\n\n    this.setState({\n      items: items,\n    });\n    this.props.onChangeValue(items);\n  }\n\n  renderRows() {\n    var context = this;\n\n    return this.state.items.map(function (item, ind) {\n      return (\n        <tr key={\"item-\" + ind}>\n          <td style={{ width: \"25%\", padding: \"5px 20px\" }}>\n            <input\n              name=\"firstname\"\n              type=\"text\"\n              value={item[\"firstname\"]}\n              onChange={context.handleItemChanged.bind(context, ind)}\n            />\n          </td>\n          <td style={{ width: \"25%\", padding: \"5px 20px\" }}>\n            <input\n              name=\"lastname\"\n              type=\"text\"\n              value={item[\"lastname\"]}\n              onChange={context.handleItemChanged.bind(context, ind)}\n            />\n          </td>\n          <td style={{ padding: \"5px 20px\" }}>\n            <input\n              name=\"affiliation\"\n              type=\"text\"\n              value={item[\"affiliation\"]}\n              onChange={context.handleItemChanged.bind(context, ind)}\n            />\n          </td>\n          <td style={{ padding: \"5px 20px\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={context.handleItemDeleted.bind(context, ind)}\n            >\n              Delete\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    // console.log(this.state.items);\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th style={{ padding: \"5px 20px\" }}>First Name</th>\n              <th style={{ padding: \"5px 20px\" }}>Last Name</th>\n              <th style={{ padding: \"5px 20px\" }}>Affiliation</th>\n              <th style={{ padding: \"5px 20px\" }}>{/* delete button */}</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderRows()}</tbody>\n        </table>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.handleAdd.bind(this)}\n        >\n          Add Author\n        </Button>\n        <hr />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 700,\n    maxWidth: 900,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function SingleSelect(props) {\n  const classes = useStyles();\n  const fieldId = \"select-\" + props.label.replace(\" \", \"-\");\n  const fieldLabelId = fieldId + \"-label\";\n  const fieldName = props.label.replace(\" \", \"_\");\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id={fieldLabelId}>{props.label}</InputLabel>\n        <Select\n          labelId={fieldLabelId}\n          id={fieldId}\n          value={props.value ? props.value : \"\"}\n          name={fieldName}\n          onChange={props.handleChange}\n          input={<Input />}\n          MenuProps={MenuProps}\n        >\n          {props.itemNames.map((name) => (\n            <MenuItem key={name} value={name}>\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n        <FormHelperText>{props.helperText}</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/LivePaper.5b661eb0.template\";","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSnackbar } from \"notistack\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nimport DynamicTable from \"./DynamicTable\";\nimport SingleSelect from \"./SingleSelect\";\n\nimport nunjucks from \"nunjucks\";\nimport LivePaper from \"./LivePaper.template\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst footerStyle = {\n  backgroundColor: \"#ffd180\",\n  fontSize: \"20px\",\n  color: \"black\",\n  borderTop: \"1px solid #000000\",\n  textAlign: \"center\",\n  position: \"fixed\",\n  left: \"50%\",\n  transform: \"translateX(-50%)\",\n  bottom: \"0\",\n  height: \"70px\",\n  width: \"70%\",\n  zIndex: \"1\",\n};\n\nconst phantomStyle = {\n  display: \"block\",\n  padding: \"20px\",\n  height: \"60px\",\n  width: \"70%\",\n};\n\nfunction Footer({ children }) {\n  return (\n    <div style={{ zIndex: \"2147483638\" }}>\n      <div style={phantomStyle} />\n      <div style={footerStyle}>{children}</div>\n    </div>\n  );\n}\n\nfunction showNotification(enqueueSnackbar, message, type = \"default\") {\n  // type: default, success, error, warning, info\n  enqueueSnackbar(message, {\n    variant: type,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"right\",\n    },\n  });\n}\n\nfunction getFormattedTime() {\n  var today = new Date();\n  var y = today.getFullYear();\n  // JavaScript months are 0-based.\n  var m = today.getMonth() + 1;\n  var d = today.getDate();\n  var h = today.getHours();\n  var mi = today.getMinutes();\n  var s = today.getSeconds();\n  return (\n    y.toString() +\n    m.toString() +\n    d.toString() +\n    \"_\" +\n    h.toString() +\n    mi.toString() +\n    s.toString()\n  );\n}\n\nconst MyDialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst popular_licenses = [\n  \"None\",\n  \"Apache License 2.0\",\n  'BSD 2-Clause \"Simplified\" License',\n  'BSD 3-Clause \"New\" or \"Revised\" License',\n  \"Creative Commons Attribution 4.0 International\",\n  \"Creative Commons Attribution Non Commercial 4.0 International\",\n  \"Creative Commons Attribution Share Alike 4.0 International\",\n  \"Creative Commons Zero v1.0 Universal\",\n  \"GNU General Public License v2.0 or later\",\n  \"GNU General Public License v3.0 or later\",\n  \"GNU Lesser General Public License v3.0 or later\",\n  \"MIT License\",\n];\n\nclass CreateLivePaper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.data === \"\") {\n      this.state = {\n        page_title: \"\",\n        authors_string: \"\",\n        affiliations_string: \"\",\n        authors: [{ firstname: \"\", lastname: \"\", affiliation: \"\" }],\n        corresponding_author: { firstname: \"\", lastname: \"\", email: \"\" },\n        year: new Date(),\n        paper_title: \"\",\n        journal: \"\",\n        url: \"\",\n        citation: \"\",\n        doi: \"\",\n        license: \"None\",\n        abstract: \"\",\n      };\n    } else {\n      this.state = {\n        ...props.data,\n      };\n    }\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleDownloadLivePaper = this.handleDownloadLivePaper.bind(this);\n    this.handlePreviewLivePaper = this.handlePreviewLivePaper.bind(this);\n    this.handleSaveProject = this.handleSaveProject.bind(this);\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleAuthorsChange = this.handleAuthorsChange.bind(this);\n    this.makePageTitleString = this.makePageTitleString.bind(this);\n    this.makeAuthorsString = this.makeAuthorsString.bind(this);\n    this.makeAffiliationsString = this.makeAffiliationsString.bind(this);\n  }\n\n  handleClose() {\n    this.props.onClose();\n  }\n\n  handleDownloadLivePaper() {\n    this.makeAuthorsString();\n    this.makeAffiliationsString();\n\n    function render(data) {\n      fetch(LivePaper)\n        .then((r) => r.text())\n        .then((source) => {\n          var output = nunjucks.renderString(source, data);\n\n          const element = document.createElement(\"a\");\n          const file = new Blob([output], { type: \"text/html\" });\n          element.href = URL.createObjectURL(file);\n          element.download = \"livepaper_\" + getFormattedTime() + \".html\";\n          document.body.appendChild(element); // Required for this to work in FireFox\n          element.click();\n        });\n    }\n    render(this.state);\n\n    showNotification(\n      this.props.enqueueSnackbar,\n      \"Live Paper downloaded...\",\n      \"success\"\n    );\n  }\n\n  async handlePreviewLivePaper() {\n    let first = new Promise((resolve, reject) => {\n      this.makeAuthorsString();\n      resolve();\n    });\n\n    let second = new Promise((resolve, reject) => {\n      this.makeAffiliationsString();\n      resolve();\n    });\n\n    let third = new Promise((resolve, reject) => {\n      this.makePageTitleString();\n      resolve();\n    });\n\n    await Promise.all([first, second, third]);\n\n    function render(data) {\n      fetch(LivePaper)\n        .then((r) => r.text())\n        .then((source) => {\n          var output = nunjucks.renderString(source, data);\n          var w = window.open(\"\");\n          w.document.write(output);\n          w.document.close();\n        });\n    }\n    var data = this.state;\n    render(data);\n\n    showNotification(\n      this.props.enqueueSnackbar,\n      \"Preview generated...\",\n      \"info\"\n    );\n  }\n\n  handleSaveProject() {\n    // create JSON object with live paper info\n    const lp_data = JSON.stringify(this.state, null, 4);\n    const blob = new Blob([lp_data], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.download = \"livepaper_\" + getFormattedTime() + \".lpp\";\n    link.href = url;\n    link.click();\n\n    showNotification(\n      this.props.enqueueSnackbar,\n      \"Project downloaded...\",\n      \"success\"\n    );\n  }\n\n  handleFieldChange(event) {\n    console.log(event);\n    const target = event.target;\n    let value = target.value;\n    const name = target.name;\n    console.log(name + \" => \" + value);\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleYearChange(value) {\n    this.setState({ year: value._d });\n  }\n\n  handleAuthorsChange(data) {\n    // remove all entries where firstname and lastname both are empty\n    function isNotEmpty(item) {\n      if (item.firstname.trim() !== \"\" || item.lastname.trim() !== \"\") {\n        return true;\n      } else return false;\n    }\n    var author_data = data.filter(isNotEmpty);\n\n    if (author_data.length === 0) {\n      author_data = [{ firstname: \"\", lastname: \"\", affiliation: \"\" }];\n    }\n    this.setState({\n      authors: author_data,\n    });\n\n    this.makePageTitleString();\n    this.makeAuthorsString();\n    this.makeAffiliationsString();\n  }\n\n  makePageTitleString() {\n    return new Promise((resolve) => {\n      const author_data = this.state.authors;\n      var page_title = \"\";\n      if (author_data.length === 0) {\n        page_title = \"\";\n      } else if (author_data.length === 1) {\n        page_title =\n          author_data[0].lastname + \" \" + this.state.year.getFullYear();\n      } else if (author_data.length === 2) {\n        page_title =\n          author_data[0].lastname +\n          \" & \" +\n          author_data[1].lastname +\n          \" \" +\n          this.state.year;\n      } else {\n        page_title =\n          author_data[0].lastname + \" et al. \" + this.state.year.getFullYear();\n      }\n\n      this.setState({\n        page_title: page_title,\n      });\n    });\n  }\n\n  makeAuthorsString() {\n    return new Promise((resolve) => {\n      var data_string = \"\";\n      this.state.authors.forEach(function (author, index) {\n        if (index > 0) {\n          data_string = data_string + \", \";\n        }\n        data_string =\n          data_string +\n          author.firstname +\n          \" \" +\n          author.lastname +\n          \" \" +\n          (index + 1).toString().sup();\n      });\n      this.setState({\n        authors_string: data_string,\n      });\n    });\n  }\n\n  makeAffiliationsString() {\n    return new Promise((resolve) => {\n      var unique_affs = [];\n      this.state.authors.forEach(function (item) {\n        var affs = item.affiliation.split(\";\").map(function (x) {\n          return x.trim();\n        });\n        affs.forEach(function (aff) {\n          if (!unique_affs.includes(aff)) {\n            unique_affs.push(aff);\n          }\n        });\n      });\n      // add superscript numbering to each affiliation\n      unique_affs.forEach(function (aff, index) {\n        this[index] = (index + 1).toString().sup() + \" \" + aff;\n      }, unique_affs);\n      var data_string = unique_affs.join(\", \");\n      this.setState({\n        affiliations_string: data_string,\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.state.paper_title);\n\n    return (\n      <Dialog\n        fullScreen\n        onClose={this.handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        // open={true}\n        open={this.props.open}\n      >\n        <MyDialogTitle onClose={this.handleClose} />\n        <DialogContent>\n          <div className=\"container\" style={{ textAlign: \"left\" }}>\n            <div className=\"box rounded centered\">\n              <a\n                href=\"../../index.html\"\n                className=\"waves-effect waves-light\"\n                style={{ textAlign: \"center\", color: \"black\" }}\n              >\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <img\n                          className=\"hbp-icon-small\"\n                          src=\"./imgs/hbp_diamond_120.png\"\n                          alt=\"HBP logo\"\n                        />\n                      </td>\n                      <td>\n                        <span\n                          className=\"title-style subtitle\"\n                          style={{ paddingLeft: \"5px\" }}\n                        >\n                          EBRAINS Live Papers\n                        </span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </a>\n              <h5 className=\"title-style\">Live Paper Builder</h5>\n            </div>\n            <div\n              style={{\n                paddingLeft: \"5%\",\n                paddingRight: \"5%\",\n                textAlign: \"justify\",\n              }}\n            >\n              <div>\n                Please enter the information in the fields below. You can\n                generate the live paper and/or save the project at any time by\n                clicking on the buttons on the bottom of the page.\n                <br />\n                <br />\n                When saving the project, a file with extension '.lpp' will be\n                downloaded. You can upload this file later to update the live\n                paper contents. Please do not manually edit these files, as it\n                could render them unreadable by this tool.\n              </div>\n              <br />\n              <div>\n                <p>\n                  <strong>\n                    Enter the complete title of your manuscript / paper:\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <TextField\n                  label=\"Title\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  name=\"paper_title\"\n                  value={this.state.paper_title}\n                  onChange={this.handleFieldChange}\n                  InputProps={{\n                    style: {\n                      padding: \"5px 15px\",\n                    },\n                  }}\n                />\n              </div>\n              <br />\n              <div>\n                <p>\n                  <strong>\n                    Enter the year of publication (if unpublished, leave\n                    unchanged):\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <div>\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <DatePicker\n                      label=\"Year\"\n                      inputVariant=\"outlined\"\n                      views={[\"year\"]}\n                      name=\"year\"\n                      value={this.state.year}\n                      minDate={\n                        new Date(\"2010\", \"01\", \"01\", \"00\", \"00\", \"00\", \"0\")\n                      }\n                      maxDate={new Date()}\n                      onChange={this.handleYearChange}\n                      animateYearScrolling\n                      InputProps={{\n                        style: {\n                          borderBottom: \"0px\",\n                          padding: \"5px 15px 5px 15px\",\n                          width: \"100px\",\n                        },\n                      }}\n                    />\n                  </MuiPickersUtilsProvider>\n                </div>\n              </div>\n              <br />\n              <div>\n                <p>\n                  <strong>\n                    Enter details of all authors in the required order:\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <DynamicTable\n                  value={this.state.authors}\n                  onChangeValue={this.handleAuthorsChange}\n                />\n              </div>\n              <br />\n              <br />\n              <div>\n                <p>\n                  <strong>\n                    Specify the corresponding author, along with their email\n                    address:\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <SingleSelect\n                  itemNames={\n                    this.state.authors\n                      ? this.state.authors.map(function (author) {\n                          return author.firstname + \" \" + author.lastname;\n                        })\n                      : []\n                  }\n                  label=\"Corresponding Author\"\n                  name=\"corresponding_author\"\n                  value={\n                    this.state.corresponding_author.firstname +\n                    \" \" +\n                    this.state.corresponding_author.lastname\n                  }\n                  handleChange={this.handleFieldChange}\n                />\n              </div>\n              <br />\n              <div>\n                <TextField\n                  label=\"Corresponding Author Email\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  name=\"corresponding_author_email\"\n                  value={this.state.corresponding_author.email}\n                  onChange={this.handleFieldChange}\n                  InputProps={{\n                    style: {\n                      padding: \"5px 15px\",\n                    },\n                  }}\n                  style={{ width: 700 }}\n                />\n              </div>\n              <br />\n              <br />\n              <div>\n                <p>\n                  <strong>\n                    Specify the journal in which paper is published (leave empty\n                    if awaiting publication):\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <TextField\n                  label=\"Journal\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  name=\"journal\"\n                  value={this.state.journal}\n                  onChange={this.handleFieldChange}\n                  InputProps={{\n                    style: {\n                      padding: \"5px 15px\",\n                    },\n                  }}\n                />\n              </div>\n              <div>\n                <p>\n                  <strong>\n                    Provide the URL to access article (leave empty if awaiting\n                    publication or link to bioRxiv, if relevant):\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <TextField\n                  label=\"Article URL\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  name=\"url\"\n                  value={this.state.url}\n                  onChange={this.handleFieldChange}\n                  InputProps={{\n                    style: {\n                      padding: \"5px 15px\",\n                    },\n                  }}\n                />\n              </div>\n              <div>\n                <p>\n                  <strong>\n                    Specify the citation text to be used for article (leave\n                    empty if awaiting publication):\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <TextField\n                  multiline\n                  rows=\"3\"\n                  label=\"Citation\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  name=\"citation\"\n                  value={this.state.citation}\n                  onChange={this.handleFieldChange}\n                  InputProps={{\n                    style: {\n                      padding: \"15px 15px\",\n                    },\n                  }}\n                />\n              </div>\n              <div>\n                <p>\n                  <strong>\n                    Indicate the DOI entry for article (leave empty if awaiting\n                    publication):\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <TextField\n                  label=\"DOI\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                  name=\"doi\"\n                  value={this.state.doi}\n                  onChange={this.handleFieldChange}\n                  InputProps={{\n                    style: {\n                      padding: \"5px 15px\",\n                    },\n                  }}\n                />\n              </div>\n              <br />\n              <div>\n                <p>\n                  <strong>\n                    Provide the abstract of your manuscript / paper:\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <Grid item xs={12}>\n                  <TextField\n                    multiline\n                    rows=\"8\"\n                    label=\"Abstract\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    helperText=\"The description may be formatted with Markdown\"\n                    name=\"abstract\"\n                    value={this.state.abstract}\n                    onChange={this.handleFieldChange}\n                    InputProps={{\n                      style: {\n                        padding: \"15px 15px\",\n                      },\n                    }}\n                  />\n                </Grid>\n              </div>\n              <br />\n              <br />\n              <div>\n                <p>\n                  <strong>\n                    Specify the license to be applied for the contents displayed\n                    in this live paper:\n                  </strong>\n                </p>\n              </div>\n              <div>\n                <SingleSelect\n                  itemNames={popular_licenses}\n                  label=\"License\"\n                  name=\"license\"\n                  value={this.state.license}\n                  handleChange={this.handleFieldChange}\n                  helperText=\"For guidance on choosing a licence, see https://choosealicense.com\"\n                />\n              </div>\n\n              <br />\n              <br />\n\n              <h5>Resources</h5>\n              <p>Add a line of description:</p>\n              <ul className=\"collapsible\" data-collapsible=\"expandable\">\n                <li className=\"active\">\n                  <div className=\"collapsible-header amber lighten-5\">\n                    <i className=\"material-icons\">settings_input_antenna</i>Add\n                    heading\n                  </div>\n                  <div className=\"collapsible-body \">Add content here</div>\n                </li>\n                <li>\n                  <div className=\"collapsible-header amber lighten-5\">\n                    <i className=\"material-icons\">timeline</i>Add heading\n                  </div>\n                  <div className=\"collapsible-body\">Add content here</div>\n                </li>\n                <li>\n                  <div className=\"collapsible-header amber lighten-5\">\n                    <i className=\"material-icons\">note_add</i>Add heading\n                  </div>\n                  <div className=\"collapsible-body\">Add content here</div>\n                </li>\n                <li>\n                  <div className=\"collapsible-header amber lighten-5\">\n                    <i className=\"material-icons\">local_play</i>Add heading\n                  </div>\n                  <div className=\"collapsible-body\">Add content here</div>\n                </li>\n              </ul>\n              <br />\n              <br />\n            </div>\n          </div>\n          <Footer>\n            <div className=\"rainbow-row\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{\n                  width: \"25%\",\n                  backgroundColor: \"#FF9800\",\n                  color: \"#000000\",\n                  fontWeight: \"bold\",\n                }}\n                onClick={this.handlePreviewLivePaper}\n              >\n                Preview Live Paper\n              </Button>\n              <br />\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{\n                  width: \"25%\",\n                  backgroundColor: \"#009688\",\n                  color: \"#000000\",\n                  fontWeight: \"bold\",\n                }}\n                onClick={this.handleDownloadLivePaper}\n              >\n                Download Live Paper\n              </Button>\n              <br />\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{\n                  width: \"25%\",\n                  backgroundColor: \"#01579b\",\n                  fontWeight: \"bold\",\n                }}\n                onClick={this.handleSaveProject}\n              >\n                Save & Download Project\n              </Button>\n            </div>\n          </Footer>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\nexport default withSnackbar(CreateLivePaper);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CreateLivePaper from \"./CreateLivePaper\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      createLivePaperOpen: false,\n      projectData: {},\n    };\n\n    this.inputFileRef = React.createRef();\n\n    this.handleCreateLivePaperOpen = this.handleCreateLivePaperOpen.bind(this);\n    this.handleCreateLivePaperClose = this.handleCreateLivePaperClose.bind(\n      this\n    );\n    this.handleLoadProject = this.handleLoadProject.bind(this);\n    this.onFileSelect = this.onFileSelect.bind(this);\n  }\n\n  handleCreateLivePaperOpen() {\n    this.setState({ projectData: \"\", createLivePaperOpen: true });\n  }\n\n  handleCreateLivePaperClose() {\n    this.setState({ createLivePaperOpen: false });\n  }\n\n  handleLoadProject() {\n    this.inputFileRef.current.click();\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length === 1) {\n      var data = \"\";\n      const scope = this;\n      const reader = new FileReader();\n      reader.onload = function (that) {\n        data = JSON.parse(reader.result);\n        // console.log(data);\n        scope.setState({ projectData: data, createLivePaperOpen: true });\n      };\n      reader.readAsText(event.target.files[0]);\n    } else {\n      this.setState({ projectData: {} });\n    }\n  }\n\n  render() {\n    var createLivePaperContent = \"\";\n    if (this.state.createLivePaperOpen) {\n      createLivePaperContent = (\n        <CreateLivePaper\n          open={this.state.createLivePaperOpen}\n          onClose={this.handleCreateLivePaperClose}\n          data={this.state.projectData}\n        />\n      );\n    }\n\n    return (\n      <div className=\"container\" style={{ textAlign: \"left\" }}>\n        <br />\n        <div className=\"box rounded centered\">\n          <a\n            href=\"../../index.html\"\n            className=\"waves-effect waves-light\"\n            style={{ textAlign: \"center\", color: \"black\" }}\n          >\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <img\n                      className=\"hbp-icon-small\"\n                      src=\"./imgs/hbp_diamond_120.png\"\n                      alt=\"HBP logo\"\n                    />\n                  </td>\n                  <td>\n                    <span\n                      className=\"title-style subtitle\"\n                      style={{ paddingLeft: \"5px\" }}\n                    >\n                      EBRAINS Live Papers\n                    </span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </a>\n          <h5 className=\"title-style\">Live Paper Builder</h5>\n        </div>\n        <div\n          style={{\n            paddingLeft: \"5%\",\n            paddingRight: \"5%\",\n            textAlign: \"justify\",\n          }}\n        >\n          <strong>Welcome to the EBRAINS live paper builder!</strong>\n          <br />\n          <br />\n          Here you can start building a new live paper linked to your manuscript\n          or published article. The live paper builder allows you to build the\n          live paper without any web development skills. Various functionalities\n          for building a simple to moderately complex live paper is made\n          available via this tool. For more advanced features and\n          customizations, the users can edit the live Papers generated by this\n          tool.\n          <br />\n          <br />\n          Live papers are often not produced in one go, and might require\n          revisions over time. Keeping this in mind, we allow users to download\n          \"live paper projects\" during each session. These sessions can be\n          uploaded later, to continue from where you had left off. Please note,\n          that these project files should not be manually edited as it could\n          render them unreadable by the tool.\n        </div>\n        <br />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{\n              width: \"40%\",\n              backgroundColor: \"#FF9800\",\n              color: \"#000000\",\n              fontWeight: \"bold\",\n            }}\n            onClick={this.handleCreateLivePaperOpen}\n          >\n            Create New Live Paper\n          </Button>\n          <br />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{\n              width: \"40%\",\n              backgroundColor: \"#01579b\",\n              fontWeight: \"bold\",\n            }}\n            onClick={this.handleLoadProject}\n          >\n            Load Existing Project\n          </Button>\n        </div>\n        <br />\n        <br />\n        <div className=\"rainbow-row\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <br />\n        <br />\n        <div>{createLivePaperContent}</div>\n        <div>\n          <input\n            id=\"fileInput\"\n            type=\"file\"\n            ref={this.inputFileRef}\n            style={{ display: \"none\" }}\n            accept=\".lpp\"\n            onChange={this.onFileSelect}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import CreateLivePaper from \"./CreateLivePaper\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n      {/* <CreateLivePaper /> */}\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}