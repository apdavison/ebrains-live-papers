stages:
  - build
  - test

build_production:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - export # debugging environment variables
    - cd apps
    - sh deployment/write_build_info.sh
    - docker build -f deployment/Dockerfile.prod -t docker-registry.ebrains.eu/live-papers/live-papers-apps:prod .
    - echo $DOCKER_REGISTRY_USER
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_SECRET docker-registry.ebrains.eu
    - docker push docker-registry.ebrains.eu/live-papers/live-papers-apps:prod
  tags:
    - shell-runner

build_staging:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  script:
    - cd apps
    - sh deployment/write_build_info.sh
    - docker build -f deployment/Dockerfile.staging -t docker-registry.ebrains.eu/live-papers/live-papers-apps:staging .
    - echo $DOCKER_REGISTRY_USER
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_SECRET docker-registry.ebrains.eu
    - docker push docker-registry.ebrains.eu/live-papers/live-papers-apps:staging
  tags:
    - shell-runner

build_merge_request:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"
  script:
    - cd apps
    - sh deployment/write_build_info.sh
    - docker build -f deployment/Dockerfile.staging -t live-papers-apps-tmp .
  tags:
    - shell-runner

run_tests:
  stage: test
  script:
    - cd apps
    - sh deployment/write_build_info.sh
    - cd live-paper-builder
    - npm ci
    - npm run test
  tags:
    - docker-runner
  image: docker-registry.ebrains.eu/live-papers/node:22-alpine
